// generated 2007/11/23 15:34:30 EST by jmorey@jmorey-desktop.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /Projects/DP/DigitalParent.glade
// for gtk 2.10.11 and gtkmm 2.10.8
//
// Please modify the corresponding derived classes in ./src/login_dlg.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "login_dlg_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gdkmm/pixbufloader.h>

static const unsigned char no_user_png_data[] = 
{       	137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,
	0,0,0,89,0,0,0,89,8,2,0,0,0,218,105,31,
	248,0,0,0,4,103,65,77,65,0,0,177,143,11,252,97,
	5,0,0,2,5,73,68,65,84,120,94,237,156,237,118,131,
	32,16,68,211,55,247,209,250,104,77,14,61,72,217,101,25,
	173,96,140,215,127,241,3,97,152,185,2,49,249,90,150,229,
	193,150,20,120,106,193,150,20,248,213,226,251,246,27,90,172,
	22,64,11,180,240,128,128,47,240,5,190,136,31,149,100,132,
	140,144,17,50,162,14,168,225,5,188,128,23,240,2,94,168,
	10,192,11,120,1,47,212,180,48,190,128,23,240,2,94,192,
	11,85,1,120,1,47,224,133,154,150,33,227,139,252,69,117,
	174,133,221,163,86,112,226,121,104,49,152,157,248,98,21,184,
	171,69,245,182,71,153,131,242,144,27,177,116,194,136,232,156,
	144,145,74,169,178,109,246,141,152,212,230,64,187,3,69,57,
	83,139,170,123,93,141,210,57,115,208,123,130,22,173,126,110,
	189,38,245,225,90,88,231,199,13,190,176,47,108,207,91,40,
	84,114,184,92,200,87,93,91,139,24,120,226,115,36,3,229,
	242,90,28,72,248,57,69,13,97,231,156,170,31,126,23,180,
	24,60,6,63,188,199,230,20,136,47,240,133,231,52,124,129,
	47,186,190,232,206,181,231,48,172,172,134,56,202,10,78,19,
	75,120,54,237,79,70,208,98,253,205,196,155,104,225,46,237,
	196,150,156,237,139,216,186,238,50,76,44,110,119,229,198,78,
	94,255,115,73,86,179,44,164,148,120,67,70,148,245,5,59,
	233,106,41,168,148,86,105,161,92,18,87,192,157,64,103,57,
	246,104,97,167,219,226,146,84,224,172,174,100,129,71,244,67,
	65,61,183,177,51,46,200,93,128,40,119,230,26,87,201,215,
	173,228,154,60,205,235,183,118,134,187,104,48,220,23,214,150,
	214,86,173,44,4,251,247,29,138,159,175,245,184,211,205,164,
	94,123,87,111,219,111,110,110,211,181,138,46,129,149,118,240,
	34,221,180,206,72,224,243,216,135,113,47,185,90,40,109,222,
	97,254,110,61,91,62,245,181,168,242,124,159,143,204,205,214,
	190,70,11,180,240,146,143,47,240,5,190,136,159,137,100,132,
	140,144,17,50,162,142,156,225,5,188,128,23,240,2,94,168,
	10,192,11,120,1,47,212,180,48,190,128,23,240,2,94,192,
	11,85,1,120,1,47,224,133,154,22,198,23,240,2,94,192,
	139,237,188,120,253,37,244,237,183,31,231,54,55,164,158,120,
	155,253,0,0,0,0,73,69,78,68,174,66,96,130,

};

login_dlg_glade::login_dlg_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  login_dlg = this;
   gmm_data = new GlademmData(get_accel_group());
   admin_psswrd_edit_box = Gtk::manage(new class Gtk::Entry());
   secret_q_edit_box = Gtk::manage(new class Gtk::Entry());
   secret_a_edit_box = Gtk::manage(new class Gtk::Entry());
   secret_question_label = Gtk::manage(new class Gtk::Label(_("secret question")));
   secret_answer_label = Gtk::manage(new class Gtk::Label(_("secret answer")));
   icon1_password_edit_box = Gtk::manage(new class Gtk::Entry());
   icon2_password_edit_box = Gtk::manage(new class Gtk::Entry());
   icon3_password_edit_box = Gtk::manage(new class Gtk::Entry());
   icon3_password_label = Gtk::manage(new class Gtk::Label(_("Password")));
   icon2_password_label = Gtk::manage(new class Gtk::Label(_("Password")));
   user1_label = Gtk::manage(new class Gtk::Label(_("")));
   user2_label = Gtk::manage(new class Gtk::Label(_("")));
   user3_label = Gtk::manage(new class Gtk::Label(_("")));
   icon1_password_label = Gtk::manage(new class Gtk::Label(_("Password")));
   previous_user_button = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-media-previous")));
   next_user_button = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-media-next")));
   admin_label = Gtk::manage(new class Gtk::Label(_("* ADMINISTRATOR *")));
   admin_login_label = Gtk::manage(new class Gtk::Label(_("Please enter the password to login as the administrator.")));
   back_button = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-go-back")));
   
   Glib::RefPtr<Gdk::PixbufLoader> _admin_icon_loader=Gdk::PixbufLoader::create();
   _admin_icon_loader->write(no_user_png_data, sizeof no_user_png_data);
   _admin_icon_loader->close();
   admin_icon = Gtk::manage(new class Gtk::Image(_admin_icon_loader->get_pixbuf()));
   _admin_icon_loader=Glib::RefPtr<Gdk::PixbufLoader>();
   admin_login_button = Gtk::manage(new class Gtk::Button());
   hseparator1 = Gtk::manage(new class Gtk::HSeparator());
   
   Glib::RefPtr<Gdk::PixbufLoader> _user_button1_icon_loader=Gdk::PixbufLoader::create();
   _user_button1_icon_loader->write(no_user_png_data, sizeof no_user_png_data);
   _user_button1_icon_loader->close();
   user_button1_icon = Gtk::manage(new class Gtk::Image(_user_button1_icon_loader->get_pixbuf()));
   _user_button1_icon_loader=Glib::RefPtr<Gdk::PixbufLoader>();
   user_icon_select_button_1 = Gtk::manage(new class Gtk::Button());
   
   Glib::RefPtr<Gdk::PixbufLoader> _user_button2_icon_loader=Gdk::PixbufLoader::create();
   _user_button2_icon_loader->write(no_user_png_data, sizeof no_user_png_data);
   _user_button2_icon_loader->close();
   user_button2_icon = Gtk::manage(new class Gtk::Image(_user_button2_icon_loader->get_pixbuf()));
   _user_button2_icon_loader=Glib::RefPtr<Gdk::PixbufLoader>();
   user_icon_select_button_2 = Gtk::manage(new class Gtk::Button());
   
   Glib::RefPtr<Gdk::PixbufLoader> _user_button3_icon_loader=Gdk::PixbufLoader::create();
   _user_button3_icon_loader->write(no_user_png_data, sizeof no_user_png_data);
   _user_button3_icon_loader->close();
   user_button3_icon = Gtk::manage(new class Gtk::Image(_user_button3_icon_loader->get_pixbuf()));
   _user_button3_icon_loader=Glib::RefPtr<Gdk::PixbufLoader>();
   user_icon_select_button_3 = Gtk::manage(new class Gtk::Button());
   login_hint_label = Gtk::manage(new class Gtk::Label(_("")));
   fixed5 = Gtk::manage(new class Gtk::Fixed());
   vbox1 = Gtk::manage(new class Gtk::VBox(false, 0));
   admin_psswrd_edit_box->set_size_request(192,27);
   admin_psswrd_edit_box->set_flags(Gtk::CAN_FOCUS);
   admin_psswrd_edit_box->set_visibility(false);
   admin_psswrd_edit_box->set_editable(true);
   admin_psswrd_edit_box->set_max_length(16);
   admin_psswrd_edit_box->set_text(_(""));
   admin_psswrd_edit_box->set_has_frame(true);
   admin_psswrd_edit_box->set_activates_default(true);
   secret_q_edit_box->set_size_request(160,27);
   secret_q_edit_box->set_flags(Gtk::CAN_FOCUS);
   secret_q_edit_box->set_visibility(true);
   secret_q_edit_box->set_editable(false);
   secret_q_edit_box->set_max_length(16);
   secret_q_edit_box->set_text(_(""));
   secret_q_edit_box->set_has_frame(true);
   secret_q_edit_box->set_activates_default(false);
   secret_a_edit_box->set_size_request(160,27);
   secret_a_edit_box->set_flags(Gtk::CAN_FOCUS);
   secret_a_edit_box->set_visibility(true);
   secret_a_edit_box->set_editable(true);
   secret_a_edit_box->set_max_length(0);
   secret_a_edit_box->set_text(_(""));
   secret_a_edit_box->set_has_frame(true);
   secret_a_edit_box->set_activates_default(false);
   secret_question_label->set_size_request(125,17);
   secret_question_label->set_alignment(0.5,0.5);
   secret_question_label->set_padding(0,0);
   secret_question_label->set_justify(Gtk::JUSTIFY_LEFT);
   secret_question_label->set_line_wrap(false);
   secret_question_label->set_use_markup(false);
   secret_question_label->set_selectable(false);
   secret_answer_label->set_size_request(125,17);
   secret_answer_label->set_alignment(0.5,0.5);
   secret_answer_label->set_padding(0,0);
   secret_answer_label->set_justify(Gtk::JUSTIFY_LEFT);
   secret_answer_label->set_line_wrap(false);
   secret_answer_label->set_use_markup(false);
   secret_answer_label->set_selectable(false);
   icon1_password_edit_box->set_size_request(208,27);
   icon1_password_edit_box->set_flags(Gtk::CAN_FOCUS);
   icon1_password_edit_box->set_visibility(false);
   icon1_password_edit_box->set_editable(true);
   icon1_password_edit_box->set_max_length(16);
   icon1_password_edit_box->set_text(_(""));
   icon1_password_edit_box->set_has_frame(true);
   icon1_password_edit_box->set_activates_default(false);
   icon2_password_edit_box->set_size_request(208,27);
   icon2_password_edit_box->set_flags(Gtk::CAN_FOCUS);
   icon2_password_edit_box->set_visibility(false);
   icon2_password_edit_box->set_editable(true);
   icon2_password_edit_box->set_max_length(16);
   icon2_password_edit_box->set_text(_(""));
   icon2_password_edit_box->set_has_frame(true);
   icon2_password_edit_box->set_activates_default(false);
   icon3_password_edit_box->set_size_request(208,27);
   icon3_password_edit_box->set_flags(Gtk::CAN_FOCUS);
   icon3_password_edit_box->set_visibility(false);
   icon3_password_edit_box->set_editable(true);
   icon3_password_edit_box->set_max_length(16);
   icon3_password_edit_box->set_text(_(""));
   icon3_password_edit_box->set_has_frame(true);
   icon3_password_edit_box->set_activates_default(false);
   icon3_password_label->set_size_request(125,17);
   icon3_password_label->set_alignment(0.5,0.48);
   icon3_password_label->set_padding(0,0);
   icon3_password_label->set_justify(Gtk::JUSTIFY_CENTER);
   icon3_password_label->set_line_wrap(false);
   icon3_password_label->set_use_markup(false);
   icon3_password_label->set_selectable(false);
   icon2_password_label->set_size_request(125,17);
   icon2_password_label->set_alignment(0.5,0.48);
   icon2_password_label->set_padding(0,0);
   icon2_password_label->set_justify(Gtk::JUSTIFY_CENTER);
   icon2_password_label->set_line_wrap(false);
   icon2_password_label->set_use_markup(false);
   icon2_password_label->set_selectable(false);
   user1_label->set_size_request(160,16);
   user1_label->set_alignment(0.5,0.5);
   user1_label->set_padding(0,0);
   user1_label->set_justify(Gtk::JUSTIFY_CENTER);
   user1_label->set_line_wrap(false);
   user1_label->set_use_markup(false);
   user1_label->set_selectable(false);
   user2_label->set_size_request(160,16);
   user2_label->set_alignment(0.5,0.5);
   user2_label->set_padding(0,0);
   user2_label->set_justify(Gtk::JUSTIFY_CENTER);
   user2_label->set_line_wrap(false);
   user2_label->set_use_markup(false);
   user2_label->set_selectable(false);
   user3_label->set_size_request(160,16);
   user3_label->set_alignment(0.5,0.5);
   user3_label->set_padding(0,0);
   user3_label->set_justify(Gtk::JUSTIFY_CENTER);
   user3_label->set_line_wrap(false);
   user3_label->set_use_markup(false);
   user3_label->set_selectable(false);
   icon1_password_label->set_size_request(125,17);
   icon1_password_label->set_alignment(0.5,0.48);
   icon1_password_label->set_padding(0,0);
   icon1_password_label->set_justify(Gtk::JUSTIFY_CENTER);
   icon1_password_label->set_line_wrap(false);
   icon1_password_label->set_use_markup(false);
   icon1_password_label->set_selectable(false);
   previous_user_button->set_size_request(96,40);
   previous_user_button->set_flags(Gtk::CAN_FOCUS);
   previous_user_button->set_relief(Gtk::RELIEF_NORMAL);
   next_user_button->set_size_request(96,40);
   next_user_button->set_flags(Gtk::CAN_FOCUS);
   next_user_button->set_relief(Gtk::RELIEF_NORMAL);
   admin_label->set_size_request(160,16);
   admin_label->set_alignment(0.5,0.5);
   admin_label->set_padding(0,0);
   admin_label->set_justify(Gtk::JUSTIFY_CENTER);
   admin_label->set_line_wrap(false);
   admin_label->set_use_markup(false);
   admin_label->set_selectable(false);
   admin_login_label->set_size_request(152,72);
   admin_login_label->set_alignment(0.5,0.5);
   admin_login_label->set_padding(0,0);
   admin_login_label->set_justify(Gtk::JUSTIFY_CENTER);
   admin_login_label->set_line_wrap(true);
   admin_login_label->set_use_markup(false);
   admin_login_label->set_selectable(false);
   back_button->set_size_request(96,48);
   back_button->set_flags(Gtk::CAN_FOCUS);
   back_button->set_relief(Gtk::RELIEF_NORMAL);
   admin_icon->set_alignment(0.5,0.5);
   admin_icon->set_padding(0,0);
   admin_login_button->set_size_request(160,144);
   admin_login_button->set_flags(Gtk::CAN_FOCUS);
   admin_login_button->set_relief(Gtk::RELIEF_NORMAL);
   admin_login_button->add(*admin_icon);
   hseparator1->set_size_request(768,16);
   user_button1_icon->set_alignment(0.5,0.5);
   user_button1_icon->set_padding(0,0);
   user_icon_select_button_1->set_size_request(152,144);
   user_icon_select_button_1->set_flags(Gtk::CAN_FOCUS);
   user_icon_select_button_1->set_relief(Gtk::RELIEF_NORMAL);
   user_icon_select_button_1->add(*user_button1_icon);
   user_button2_icon->set_alignment(0.5,0.5);
   user_button2_icon->set_padding(0,0);
   user_icon_select_button_2->set_size_request(160,144);
   user_icon_select_button_2->set_flags(Gtk::CAN_FOCUS);
   user_icon_select_button_2->set_relief(Gtk::RELIEF_NORMAL);
   user_icon_select_button_2->add(*user_button2_icon);
   user_button3_icon->set_alignment(0.5,0.5);
   user_button3_icon->set_padding(0,0);
   user_icon_select_button_3->set_size_request(160,144);
   user_icon_select_button_3->set_flags(Gtk::CAN_FOCUS);
   user_icon_select_button_3->set_border_width(2);
   user_icon_select_button_3->set_relief(Gtk::RELIEF_NORMAL);
   user_icon_select_button_3->add(*user_button3_icon);
   login_hint_label->set_size_request(344,25);
   login_hint_label->set_alignment(0.5,0.5);
   login_hint_label->set_padding(0,0);
   login_hint_label->set_justify(Gtk::JUSTIFY_LEFT);
   login_hint_label->set_line_wrap(true);
   login_hint_label->set_use_markup(false);
   login_hint_label->set_selectable(false);
   fixed5->put(*admin_psswrd_edit_box, 200, 120);
   fixed5->put(*secret_q_edit_box, 592, 24);
   fixed5->put(*secret_a_edit_box, 592, 64);
   fixed5->put(*secret_question_label, 456, 32);
   fixed5->put(*secret_answer_label, 456, 72);
   fixed5->put(*icon1_password_edit_box, 104, 344);
   fixed5->put(*icon2_password_edit_box, 288, 344);
   fixed5->put(*icon3_password_edit_box, 472, 344);
   fixed5->put(*icon3_password_label, 368, 352);
   fixed5->put(*icon2_password_label, 184, 352);
   fixed5->put(*user1_label, 128, 344);
   fixed5->put(*user2_label, 312, 344);
   fixed5->put(*user3_label, 496, 344);
   fixed5->put(*icon1_password_label, 0, 352);
   fixed5->put(*previous_user_button, 8, 256);
   fixed5->put(*next_user_button, 680, 256);
   fixed5->put(*admin_label, 24, 160);
   fixed5->put(*admin_login_label, 216, 24);
   fixed5->put(*back_button, 8, 200);
   fixed5->put(*admin_login_button, 24, 8);
   fixed5->put(*hseparator1, 8, 176);
   fixed5->put(*user_icon_select_button_1, 128, 192);
   fixed5->put(*user_icon_select_button_2, 312, 192);
   fixed5->put(*user_icon_select_button_3, 496, 192);
   fixed5->put(*login_hint_label, 416, 136);
   vbox1->pack_start(*fixed5);
   login_dlg->set_title(_("Digital Parent - Login"));
   login_dlg->set_modal(false);
   login_dlg->property_window_position().set_value(Gtk::WIN_POS_NONE);
   login_dlg->set_resizable(true);
   login_dlg->property_destroy_with_parent().set_value(false);
   login_dlg->add(*vbox1);
   previous_user_button->show();
   next_user_button->show();
   admin_label->show();
   admin_icon->show();
   admin_login_button->show();
   hseparator1->show();
   user_button1_icon->show();
   user_icon_select_button_1->show();
   user_button2_icon->show();
   user_icon_select_button_2->show();
   user_button3_icon->show();
   user_icon_select_button_3->show();
   login_hint_label->show();
   fixed5->show();
   vbox1->show();
   login_dlg->show();
   admin_psswrd_edit_box->signal_key_press_event().connect(SigC::slot(*this, &login_dlg_glade::on_admin_psswrd_edit_box_key_press_event), false);
   secret_a_edit_box->signal_key_press_event().connect(SigC::slot(*this, &login_dlg_glade::on_secret_a_edit_box_key_press_event), false);
   icon1_password_edit_box->signal_key_press_event().connect(SigC::slot(*this, &login_dlg_glade::on_icon1_password_edit_box_key_press_event), false);
   icon2_password_edit_box->signal_key_press_event().connect(SigC::slot(*this, &login_dlg_glade::on_icon2_password_edit_box_key_press_event), false);
   icon3_password_edit_box->signal_key_press_event().connect(SigC::slot(*this, &login_dlg_glade::on_icon3_password_edit_box_key_press_event), false);
   previous_user_button->signal_clicked().connect(SigC::slot(*this, &login_dlg_glade::on_previous_user_button_clicked), false);
   next_user_button->signal_clicked().connect(SigC::slot(*this, &login_dlg_glade::on_next_user_button_clicked), false);
   back_button->signal_clicked().connect(SigC::slot(*this, &login_dlg_glade::on_back_button_clicked), false);
   admin_login_button->signal_clicked().connect(SigC::slot(*this, &login_dlg_glade::on_admin_login_button_clicked), false);
   user_icon_select_button_1->signal_clicked().connect(SigC::slot(*this, &login_dlg_glade::on_user_icon_select_button_1_clicked), false);
   user_icon_select_button_2->signal_clicked().connect(SigC::slot(*this, &login_dlg_glade::on_user_icon_select_button_2_clicked), false);
   user_icon_select_button_3->signal_clicked().connect(SigC::slot(*this, &login_dlg_glade::on_user_icon_select_button_3_clicked), false);
   login_dlg->signal_delete_event().connect(SigC::slot(*this, &login_dlg_glade::on_login_dlg_delete_event), false);
}

login_dlg_glade::~login_dlg_glade()
{  delete gmm_data;
}
