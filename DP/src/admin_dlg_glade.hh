// generated 2007/10/31 14:05:00 EDT by jmorey@jmorey-desktop.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /Projects/DP/DigitalParent.glade
// for gtk 2.10.11 and gtkmm 2.10.8
//
// Please modify the corresponding derived classes in ./src/admin_dlg.hh and./src/admin_dlg.cc

#ifndef _ADMIN_DLG_GLADE_HH
#  define _ADMIN_DLG_GLADE_HH


#if !defined(GLADEMM_DATA)
#define GLADEMM_DATA 
#include <gtkmm/accelgroup.h>

class GlademmData
{  
        
        Glib::RefPtr<Gtk::AccelGroup> accgrp;
public:
        
        GlademmData(Glib::RefPtr<Gtk::AccelGroup> ag) : accgrp(ag)
        {  
        }
        
        Glib::RefPtr<Gtk::AccelGroup>  getAccelGroup()
        {  return accgrp;
        }
};
#endif //GLADEMM_DATA

#include <gtkmm/window.h>
#include <gtkmm/separator.h>
#include <gtkmm/checkbutton.h>
#include <gtkmm/image.h>
#include <gtkmm/entry.h>
#include <gtkmm/label.h>
#include <gtkmm/scrolledwindow.h>
#include <gtkmm/alignment.h>
#include <gtkmm/frame.h>
#include <gtkmm/button.h>
#include <gtkmm/fixed.h>
#include <gtkmm/box.h>

class admin_dlg_glade : public Gtk::Window
{  
        
        GlademmData *gmm_data;
public:
        class Gtk::Window * admin_dlg;
        class Gtk::HSeparator * hseparator2;
        class Gtk::CheckButton * pg_checkbox;
        class Gtk::CheckButton * unknown_checkbox;
        class Gtk::CheckButton * pg13_checkbox;
        class Gtk::Image * image13;
        class Gtk::Entry * pssword_confirm_edit_box;
        class Gtk::Entry * sec_ques_edit_box;
        class Gtk::Entry * password_edit_box;
        class Gtk::Entry * sec_ans_edit_box;
        class Gtk::CheckButton * nc17_checkbox;
        class Gtk::CheckButton * nr_checkbox;
        class Gtk::CheckButton * x_checkbox;
        class Gtk::CheckButton * r_checkbox;
        class Gtk::CheckButton * g_checkbox;
        class Gtk::VSeparator * vseparator1;
        class Gtk::HSeparator * hseparator3;
        class Gtk::Label * icon_viewer;
        class Gtk::ScrolledWindow * icon_scroller;
        class Gtk::Alignment * alignment6;
        class Gtk::Label * icon_select_frame_label;
        class Gtk::Frame * frame2;
        class Gtk::CheckButton * checkbutton13;
        class Gtk::CheckButton * checkbutton12;
        class Gtk::CheckButton * checkbutton11;
        class Gtk::CheckButton * hide_password_checkbox;
        class Gtk::Label * seq_ques_label;
        class Gtk::Label * sec_ans_label;
        class Gtk::Label * confirm_password_label;
        class Gtk::Entry * username_edit_box;
        class Gtk::Label * password_label;
        class Gtk::Label * user_name_label;
        class Gtk::Button * accept_changes_button;
        class Gtk::Fixed * fixed9;
        class Gtk::VBox * vbox6;
        class Gtk::VBox * vbox5;
        class Gtk::Alignment * alignment5;
        class Gtk::Frame * frame1;
        class Gtk::Label * user_label;
        class Gtk::Button * logout_button;
        class Gtk::Button * admin_settings_button;
        class Gtk::Button * add_user_button;
        class Gtk::Button * edit_User;
        class Gtk::Button * remove_user_button;
        class Gtk::Button * screen_movies_button;
        class Gtk::Fixed * fixed8;
protected:
        
        admin_dlg_glade();
        
        ~admin_dlg_glade();
private:
        virtual void on_pg_checkbox_toggled() = 0;
        virtual void on_unknown_checkbox_toggled() = 0;
        virtual void on_pg13_checkbox_toggled() = 0;
        virtual bool on_pssword_confirm_edit_box_key_press_event(GdkEventKey *ev) = 0;
        virtual bool on_sec_ques_edit_box_key_press_event(GdkEventKey *ev) = 0;
        virtual bool on_password_edit_box_key_press_event(GdkEventKey *ev) = 0;
        virtual bool on_sec_ans_edit_box_key_press_event(GdkEventKey *ev) = 0;
        virtual void on_nc17_checkbox_toggled() = 0;
        virtual void on_nr_checkbox_toggled() = 0;
        virtual void on_x_checkbox_toggled() = 0;
        virtual void on_r_checkbox_toggled() = 0;
        virtual void on_g_checkbox_toggled() = 0;
        virtual bool on_icon_viewer_key_press_event(GdkEventKey *ev) = 0;
        virtual bool on_username_edit_box_key_press_event(GdkEventKey *ev) = 0;
        virtual void on_logout_button_clicked() = 0;
        virtual void on_admin_settings_button_clicked() = 0;
        virtual void on_add_user_button_clicked() = 0;
        virtual void on_edit_User_clicked() = 0;
        virtual void on_remove_user_button_clicked() = 0;
        virtual void on_screen_movies_button_clicked() = 0;
};
#endif
