// generated 2007/11/9 13:37:03 EST by ctemple@Barf.(none)
// using glademm V2.6.0
//
// DO NOT EDIT THIS FILE ! It was created using
// glade-- /Projects/DP/DigitalParent.glade
// for gtk 2.10.11 and gtkmm 2.10.8
//
// Please modify the corresponding derived classes in ./src/media_player_dlg.cc


#if defined __GNUC__ && __GNUC__ < 3
#error This program will crash if compiled with g++ 2.x
// see the dynamic_cast bug in the gtkmm FAQ
#endif //
#include "config.h"
/*
 * Standard gettext macros.
 */
#ifdef ENABLE_NLS
#  include <libintl.h>
#  undef _
#  define _(String) dgettext (GETTEXT_PACKAGE, String)
#  ifdef gettext_noop
#    define N_(String) gettext_noop (String)
#  else
#    define N_(String) (String)
#  endif
#else
#  define textdomain(String) (String)
#  define gettext(String) (String)
#  define dgettext(Domain,Message) (Message)
#  define dcgettext(Domain,Message,Type) (Message)
#  define bindtextdomain(Domain,Directory) (Domain)
#  define _(String) (String)
#  define N_(String) (String)
#endif
#include <gtkmmconfig.h>
#if GTKMM_MAJOR_VERSION==2 && GTKMM_MINOR_VERSION>2
#include <sigc++/compatibility.h>
#define GMM_GTKMM_22_24(a,b) b
#else //gtkmm 2.2
#define GMM_GTKMM_22_24(a,b) a
#endif //
#include "media_player_dlg_glade.hh"
#include <gdk/gdkkeysyms.h>
#include <gtkmm/accelgroup.h>
#include <gtkmm/adjustment.h>
#include <gdkmm/pixbufloader.h>

static const unsigned char audio_volume_muted_png_data[] = 
{       	137,80,78,71,13,10,26,10,0,0,0,13,73,72,68,82,
	0,0,0,16,0,0,0,16,8,6,0,0,0,31,243,255,
	97,0,0,3,25,73,68,65,84,120,156,98,100,192,15,24,
	25,24,24,148,160,236,123,12,12,12,255,209,21,0,0,0,
	0,255,255,98,194,163,153,153,129,129,193,187,173,173,173,130,
	129,129,65,151,129,129,129,21,155,34,0,0,0,0,255,255,
	194,167,217,175,166,166,102,249,187,119,239,254,51,48,48,164,
	48,48,48,112,97,83,8,0,0,0,255,255,194,169,185,186,
	186,122,197,221,187,119,255,191,184,112,225,127,51,3,195,182,
	253,12,12,39,15,49,48,252,56,196,192,112,236,16,3,67,
	245,33,6,6,5,6,6,6,6,0,0,0,0,255,255,98,
	100,96,96,80,101,128,248,19,230,29,246,234,234,234,136,164,
	164,164,240,191,79,158,48,252,152,60,153,129,157,135,135,65,
	52,34,130,129,223,214,150,225,227,225,195,12,175,87,172,96,
	120,185,96,193,50,6,6,134,106,0,0,0,0,255,255,4,
	193,33,1,192,48,12,69,193,239,160,238,70,27,92,3,1,
	19,85,1,97,5,27,169,129,128,56,40,152,131,183,59,73,
	186,34,2,119,39,34,144,52,171,138,189,55,239,24,164,25,
	0,103,78,158,214,200,222,249,214,34,205,88,210,253,3,0,
	0,255,255,4,193,49,13,192,48,16,4,193,195,226,210,140,
	190,50,130,112,48,35,183,47,125,19,185,8,135,148,233,173,
	163,176,153,145,164,203,54,17,129,109,90,107,84,21,85,197,
	221,59,206,228,172,5,192,55,39,91,226,29,3,103,178,165,
	231,7,0,0,255,255,4,193,33,21,128,48,20,0,192,19,
	24,20,126,188,135,34,1,10,179,16,139,178,4,139,128,91,
	154,95,0,177,2,243,244,224,110,193,26,17,74,41,34,2,
	140,49,192,61,167,45,103,111,74,246,90,29,173,129,239,121,
	156,189,195,245,3,0,0,255,255,4,193,33,21,192,32,20,
	0,192,19,115,83,188,41,204,30,13,168,66,23,2,64,1,
	82,125,191,14,139,128,158,217,221,1,41,37,189,119,107,45,
	144,115,6,95,41,118,132,171,53,239,156,224,30,195,89,171,
	29,1,207,15,0,0,255,255,98,97,96,96,96,80,82,82,
	98,16,19,19,99,80,82,82,98,184,119,239,222,125,41,41,
	41,197,207,159,63,51,252,53,51,99,120,189,98,5,131,120,
	114,50,220,102,110,125,125,6,225,128,0,134,91,137,137,12,
	12,12,12,91,1,0,0,0,255,255,98,100,96,96,8,97,
	96,96,240,102,96,96,16,101,96,96,248,201,192,192,240,43,
	49,49,81,63,42,42,74,147,241,229,75,6,129,85,171,24,
	120,133,132,112,198,2,0,0,0,255,255,98,100,96,96,144,
	131,98,30,6,6,134,223,12,144,20,231,147,152,152,232,20,
	21,21,165,41,207,198,198,176,220,222,126,167,29,3,131,32,
	51,3,131,62,3,3,195,57,6,6,134,173,12,12,12,75,
	237,24,24,30,0,0,0,0,255,255,98,96,96,96,96,131,
	166,50,30,40,22,99,96,96,176,210,212,212,92,156,152,152,
	120,253,238,221,187,255,25,24,24,202,160,114,24,0,0,0,
	0,255,255,98,97,96,96,248,5,197,48,240,157,129,129,225,
	255,245,235,215,103,93,191,126,253,19,7,7,199,123,6,6,
	134,63,184,146,45,0,0,0,255,255,98,196,33,206,194,192,
	192,32,200,192,192,160,204,192,192,160,205,192,192,240,156,129,
	129,225,0,3,3,195,55,116,133,0,0,0,0,255,255,194,
	101,0,3,3,36,79,240,66,157,254,139,129,129,225,3,154,
	75,25,24,24,24,24,0,0,0,0,255,255,3,0,81,254,
	233,160,164,125,49,46,0,0,0,0,73,69,78,68,174,66,
	96,130,

};

media_player_dlg_glade::media_player_dlg_glade(
) : Gtk::Window(Gtk::WINDOW_TOPLEVEL)
{  media_player_dlg = this;
   gmm_data = new GlademmData(get_accel_group());
   
   Gtk::Adjustment *volume_slider_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 20, 0, 0, 0));
   volume_slider = Gtk::manage(new class Gtk::HScale(*volume_slider_adj));
   image5 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-previous"), Gtk::IconSize(4)));
   previous_button = Gtk::manage(new class Gtk::Button());
   image7 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-rewind"), Gtk::IconSize(4)));
   rewind_button = Gtk::manage(new class Gtk::Button());
   image4 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-stop"), Gtk::IconSize(4)));
   stop_button = Gtk::manage(new class Gtk::Button());
   image1 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-pause"), Gtk::IconSize(4)));
   pause_button = Gtk::manage(new class Gtk::Button());
   image2 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-play"), Gtk::IconSize(4)));
   play_button = Gtk::manage(new class Gtk::Button());
   image6 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-forward"), Gtk::IconSize(4)));
   fastforward_button = Gtk::manage(new class Gtk::Button());
   image3 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-media-next"), Gtk::IconSize(4)));
   next_button = Gtk::manage(new class Gtk::Button());
   image12 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-quit"), Gtk::IconSize(4)));
   label4 = Gtk::manage(new class Gtk::Label(_("Logout")));
   hbox4 = Gtk::manage(new class Gtk::HBox(false, 2));
   alignment4 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 0, 0));
   Logout = Gtk::manage(new class Gtk::Button());
   image9 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-index"), Gtk::IconSize(4)));
   playlist_button = Gtk::manage(new class Gtk::ToggleButton());
   image11 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-cut"), Gtk::IconSize(4)));
   label3 = Gtk::manage(new class Gtk::Label(_("Video")));
   hbox3 = Gtk::manage(new class Gtk::HBox(false, 2));
   alignment3 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 0, 0));
   cut_video = Gtk::manage(new class Gtk::ToggleButton());
   
   Glib::RefPtr<Gdk::PixbufLoader> _sound_loader=Gdk::PixbufLoader::create();
   _sound_loader->write(audio_volume_muted_png_data, sizeof audio_volume_muted_png_data);
   _sound_loader->close();
   sound = Gtk::manage(new class Gtk::Image(_sound_loader->get_pixbuf()));
   _sound_loader=Glib::RefPtr<Gdk::PixbufLoader>();
   mute_button = Gtk::manage(new class Gtk::ToggleButton());
   open_media_button = Gtk::manage(new class Gtk::Button(Gtk::StockID("gtk-cdrom")));
   
   Gtk::Adjustment *time_slider_adj = Gtk::manage(new class Gtk::Adjustment(0, 0, 100, 1, 0, 0));
   time_slider = Gtk::manage(new class Gtk::HScale(*time_slider_adj));
   currentUser = Gtk::manage(new class Gtk::Label(_("User:")));
   media = Gtk::manage(new class Gtk::Label(_("Now Playing")));
   image13 = Gtk::manage(new class Gtk::Image(Gtk::StockID("gtk-fullscreen"), Gtk::IconSize(4)));
   label11 = Gtk::manage(new class Gtk::Label(_("Fullscreen")));
   hbox6 = Gtk::manage(new class Gtk::HBox(false, 2));
   alignment8 = Gtk::manage(new class Gtk::Alignment(0.5, 0.5, 0, 0));
   fullscreen = Gtk::manage(new class Gtk::Button());
   fixed1 = Gtk::manage(new class Gtk::Fixed());
   volume_slider->set_size_request(88,16);
   volume_slider->set_flags(Gtk::CAN_FOCUS);
   volume_slider->set_update_policy(Gtk::UPDATE_CONTINUOUS);
   volume_slider->set_inverted(false);
   volume_slider->set_digits(1);
   volume_slider->set_draw_value(false);
   volume_slider->set_value_pos(Gtk::POS_BOTTOM);
   image5->set_alignment(0.5,0.5);
   image5->set_padding(0,0);
   previous_button->set_size_request(72,32);
   previous_button->set_flags(Gtk::CAN_FOCUS);
   previous_button->set_relief(Gtk::RELIEF_NORMAL);
   previous_button->add(*image5);
   image7->set_alignment(0.5,0.5);
   image7->set_padding(0,0);
   rewind_button->set_size_request(72,32);
   rewind_button->set_flags(Gtk::CAN_FOCUS);
   rewind_button->set_relief(Gtk::RELIEF_NORMAL);
   rewind_button->add(*image7);
   image4->set_alignment(0.5,0.5);
   image4->set_padding(0,0);
   stop_button->set_size_request(72,32);
   stop_button->set_flags(Gtk::CAN_FOCUS);
   stop_button->set_relief(Gtk::RELIEF_NORMAL);
   stop_button->add(*image4);
   image1->set_alignment(0.5,0.5);
   image1->set_padding(0,0);
   pause_button->set_size_request(72,32);
   pause_button->set_flags(Gtk::CAN_FOCUS);
   pause_button->set_relief(Gtk::RELIEF_NORMAL);
   pause_button->add(*image1);
   image2->set_alignment(0.5,0.5);
   image2->set_padding(0,0);
   play_button->set_size_request(70,32);
   play_button->set_flags(Gtk::CAN_FOCUS);
   play_button->set_relief(Gtk::RELIEF_NORMAL);
   play_button->add(*image2);
   image6->set_alignment(0.5,0.5);
   image6->set_padding(0,0);
   fastforward_button->set_size_request(72,32);
   fastforward_button->set_flags(Gtk::CAN_FOCUS);
   fastforward_button->set_relief(Gtk::RELIEF_NORMAL);
   fastforward_button->add(*image6);
   image3->set_alignment(0.5,0.5);
   image3->set_padding(0,0);
   next_button->set_size_request(70,32);
   next_button->set_flags(Gtk::CAN_FOCUS);
   next_button->set_relief(Gtk::RELIEF_NORMAL);
   next_button->add(*image3);
   image12->set_alignment(0.5,0.5);
   image12->set_padding(0,0);
   label4->set_alignment(0.5,0.5);
   label4->set_padding(0,0);
   label4->set_justify(Gtk::JUSTIFY_LEFT);
   label4->set_line_wrap(false);
   label4->set_use_markup(false);
   label4->set_selectable(false);
   hbox4->pack_start(*image12, Gtk::PACK_SHRINK, 0);
   hbox4->pack_start(*label4, Gtk::PACK_SHRINK, 0);
   alignment4->add(*hbox4);
   Logout->set_size_request(96,32);
   Logout->set_flags(Gtk::CAN_FOCUS);
   Logout->set_relief(Gtk::RELIEF_NORMAL);
   Logout->add(*alignment4);
   image9->set_alignment(0.5,0.5);
   image9->set_padding(0,0);
   playlist_button->set_size_request(72,32);
   playlist_button->set_flags(Gtk::CAN_FOCUS);
   playlist_button->set_relief(Gtk::RELIEF_NORMAL);
   playlist_button->set_active(false);
   playlist_button->add(*image9);
   image11->set_alignment(0.5,0.5);
   image11->set_padding(0,0);
   label3->set_alignment(0.5,0.5);
   label3->set_padding(0,0);
   label3->set_justify(Gtk::JUSTIFY_LEFT);
   label3->set_line_wrap(false);
   label3->set_use_markup(false);
   label3->set_selectable(false);
   hbox3->pack_start(*image11, Gtk::PACK_SHRINK, 0);
   hbox3->pack_start(*label3, Gtk::PACK_SHRINK, 0);
   alignment3->add(*hbox3);
   cut_video->set_size_request(96,32);
   cut_video->set_flags(Gtk::CAN_FOCUS);
   cut_video->set_relief(Gtk::RELIEF_NORMAL);
   cut_video->set_active(false);
   cut_video->add(*alignment3);
   sound->set_alignment(0.5,0.5);
   sound->set_padding(0,0);
   mute_button->set_size_request(48,27);
   mute_button->set_flags(Gtk::CAN_FOCUS);
   mute_button->set_relief(Gtk::RELIEF_NORMAL);
   mute_button->set_active(false);
   mute_button->add(*sound);
   open_media_button->set_size_request(96,32);
   open_media_button->set_flags(Gtk::CAN_FOCUS);
   open_media_button->set_relief(Gtk::RELIEF_NORMAL);
   time_slider->set_size_request(360,16);
   time_slider->set_flags(Gtk::CAN_FOCUS);
   time_slider->set_update_policy(Gtk::UPDATE_CONTINUOUS);
   time_slider->set_inverted(false);
   time_slider->set_digits(1);
   time_slider->set_draw_value(true);
   time_slider->set_value_pos(Gtk::POS_TOP);
   currentUser->set_size_request(128,16);
   currentUser->set_alignment(0.5,0.5);
   currentUser->set_padding(0,0);
   currentUser->set_justify(Gtk::JUSTIFY_LEFT);
   currentUser->set_line_wrap(true);
   currentUser->set_use_markup(false);
   currentUser->set_selectable(false);
   media->set_size_request(304,16);
   media->set_alignment(0.5,0.5);
   media->set_padding(0,0);
   media->set_justify(Gtk::JUSTIFY_LEFT);
   media->set_line_wrap(true);
   media->set_use_markup(false);
   media->set_selectable(false);
   image13->set_alignment(0.5,0.5);
   image13->set_padding(0,0);
   label11->set_alignment(0.5,0.5);
   label11->set_padding(0,0);
   label11->set_justify(Gtk::JUSTIFY_LEFT);
   label11->set_line_wrap(false);
   label11->set_use_markup(false);
   label11->set_selectable(false);
   hbox6->pack_start(*image13, Gtk::PACK_SHRINK, 0);
   hbox6->pack_start(*label11, Gtk::PACK_SHRINK, 0);
   alignment8->add(*hbox6);
   fullscreen->set_size_request(96,32);
   fullscreen->set_flags(Gtk::CAN_FOCUS);
   fullscreen->set_relief(Gtk::RELIEF_NORMAL);
   fullscreen->add(*alignment8);
   fixed1->put(*volume_slider, 0, 72);
   fixed1->put(*previous_button, 72, 88);
   fixed1->put(*rewind_button, 144, 88);
   fixed1->put(*stop_button, 216, 88);
   fixed1->put(*pause_button, 288, 88);
   fixed1->put(*play_button, 360, 88);
   fixed1->put(*fastforward_button, 432, 88);
   fixed1->put(*next_button, 504, 88);
   fixed1->put(*Logout, 0, 0);
   fixed1->put(*playlist_button, 592, 88);
   fixed1->put(*cut_video, 560, 0);
   fixed1->put(*mute_button, 8, 88);
   fixed1->put(*open_media_button, 0, 32);
   fixed1->put(*time_slider, 144, 48);
   fixed1->put(*currentUser, 104, 8);
   fixed1->put(*media, 248, 8);
   fixed1->put(*fullscreen, 560, 32);
   media_player_dlg->set_title(_("Digital Parent"));
   media_player_dlg->set_default_size(800,600);
   media_player_dlg->set_modal(false);
   media_player_dlg->property_window_position().set_value(Gtk::WIN_POS_CENTER);
   media_player_dlg->set_resizable(false);
   media_player_dlg->property_destroy_with_parent().set_value(false);
   media_player_dlg->add(*fixed1);
   volume_slider->show();
   image5->show();
   previous_button->show();
   image7->show();
   rewind_button->show();
   image4->show();
   stop_button->show();
   image1->show();
   pause_button->show();
   image2->show();
   play_button->show();
   image6->show();
   fastforward_button->show();
   image3->show();
   next_button->show();
   image12->show();
   label4->show();
   hbox4->show();
   alignment4->show();
   Logout->show();
   image9->show();
   playlist_button->show();
   image11->show();
   label3->show();
   hbox3->show();
   alignment3->show();
   cut_video->show();
   sound->show();
   mute_button->show();
   open_media_button->show();
   time_slider->show();
   currentUser->show();
   media->show();
   image13->show();
   label11->show();
   hbox6->show();
   alignment8->show();
   fullscreen->show();
   fixed1->show();
   media_player_dlg->show();
   volume_slider->signal_value_changed().connect(SigC::slot(*this, &media_player_dlg_glade::on_volume_slider_value_changed), false);
   previous_button->signal_clicked().connect(SigC::slot(*this, &media_player_dlg_glade::on_previous_button_clicked), false);
   rewind_button->signal_clicked().connect(SigC::slot(*this, &media_player_dlg_glade::on_rewind_button_clicked), false);
   stop_button->signal_clicked().connect(SigC::slot(*this, &media_player_dlg_glade::on_stop_button_clicked), false);
   pause_button->signal_clicked().connect(SigC::slot(*this, &media_player_dlg_glade::on_pause_button_clicked), false);
   play_button->signal_clicked().connect(SigC::slot(*this, &media_player_dlg_glade::on_play_button_clicked), false);
   fastforward_button->signal_clicked().connect(SigC::slot(*this, &media_player_dlg_glade::on_fastforward_button_clicked), false);
   next_button->signal_clicked().connect(SigC::slot(*this, &media_player_dlg_glade::on_next_button_clicked), false);
   Logout->signal_clicked().connect(SigC::slot(*this, &media_player_dlg_glade::on_Logout_clicked), false);
   playlist_button->signal_toggled().connect(SigC::slot(*this, &media_player_dlg_glade::on_playlist_button_toggled), false);
   cut_video->signal_toggled().connect(SigC::slot(*this, &media_player_dlg_glade::on_cut_video_toggled), false);
   mute_button->signal_toggled().connect(SigC::slot(*this, &media_player_dlg_glade::on_mute_button_toggled), false);
   open_media_button->signal_clicked().connect(SigC::slot(*this, &media_player_dlg_glade::on_open_media_button_clicked), false);
   time_slider->signal_value_changed().connect(SigC::slot(*this, &media_player_dlg_glade::on_time_slider_value_changed), false);
   fullscreen->signal_clicked().connect(SigC::slot(*this, &media_player_dlg_glade::on_fullscreen_clicked), false);
   time_slider->signal_button_press_event().connect(SigC::slot(*this, &media_player_dlg_glade::on_time_slider_button_press), false);
   time_slider->signal_button_release_event().connect(SigC::slot(*this, &media_player_dlg_glade::on_time_slider_button_release_event), false);
}

media_player_dlg_glade::~media_player_dlg_glade()
{  delete gmm_data;
}
